After running `configure`, the list of static modules to build and link against can be added to Modules/Setup.local. The list of standard modules exists in Modules/Setup, but they are commented out:

#array arraymodule.c  # array objects
#cmath cmathmodule.c _math.c # -lm # complex math library functions
#math mathmodule.c _math.c # -lm # math library functions, e.g. sin()
#_struct _struct.c  # binary structure packing/unpacking
#time timemodule.c # -lm # time operations and variables
#operator operator.c  # operator.add() and similar goodies
#_testcapi _testcapimodule.c    # Python C API test module
#_random _randommodule.c  # Random number generator
#_collections _collectionsmodule.c # Container types
#itertools itertoolsmodule.c  # Functions creating iterators for efficient looping 
#strop stropmodule.c    # String manipulations
#_functools _functoolsmodule.c  # Tools for working with functions and callable objects
#_pickle _pickle.c  # pickle accelerator
#datetime datetimemodule.c  # date/time type
#_bisect _bisectmodule.c  # Bisection algorithms
#unicodedata unicodedata.c    # static Unicode character database
#_locale _localemodule.c  # -lintl
#fcntl fcntlmodule.c  # fcntl(2) and ioctl(2)
#spwd spwdmodule.c    # spwd(3) 
#grp grpmodule.c    # grp(3)
#select selectmodule.c  # select(2); not on ancient System V
#crypt cryptmodule.c # -lcrypt  # crypt(3); needs -lcrypt on some systems
#termios termios.c  # Steen Lumholt's termios module
#resource resource.c  # Jeremy Hylton's rlimit interface
#audioop audioop.c  # Operations on audio samples
#imageop imageop.c  # Operations on images
#sgi sgimodule.c      # sgi.nap() and a few more
#syslog syslogmodule.c    # syslog daemon interface
#dbm dbmmodule.c  # dbm(3) may require -lndbm or similar

The ones we are linking against are:

math mathmodule.c _math.c         # -lm # math library functions, e.g. sin()
operator operator.c               # operator.add() and similar goodies
_random _randommodule.c           # Random number generator
_collections _collectionsmodule.c # Container types
itertools itertoolsmodule.c       # Functions creating iterators for efficient looping 
strop stropmodule.c               # String manipulations
_functools _functoolsmodule.c     # Tools for working with functions and callable objects

